{"version":3,"file":"static/js/250.05721ff6.chunk.js","mappings":"8PACMA,EAAU,mCACVC,EAAW,+BAEjB,aAAO,OAAP,oBAAO,WAA+BC,GAA/B,kFACDC,EADC,UACQF,EADR,kBAC0BC,EAD1B,oBAC6CF,EAD7C,4BAGkBI,EAAAA,GAAAA,IAAUD,GAH5B,cAGCE,EAHD,gBAIcA,EAASC,KAJvB,cAICA,EAJD,yBAKEA,GALF,kE,gCCDMC,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC7B,OACE,UAAC,KAAD,CAAMD,GAAIA,EAAV,WACE,SAAC,MAAD,CAAaE,KAAK,OACjBD,IAGN,E,kBCRYE,EAAYC,EAAAA,EAAAA,KAAH,sBAETC,EAAcD,EAAAA,EAAAA,IAAH,+CAIXE,EAAYF,EAAAA,EAAAA,IAAH,0CAITG,EAAYH,EAAAA,EAAAA,IAAH,8CAITI,EAAiBJ,EAAAA,EAAAA,IAAH,sBC8D3B,EAjEqB,WAAO,IAAD,IACzB,GAAwCK,EAAAA,EAAAA,UAAS,CAAC,GAAlD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQrB,GAAYsB,EAAAA,EAAAA,MAAZtB,QACFuB,GAAWC,EAAAA,EAAAA,MACXC,GAAUC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,SAkB/C,OAZAC,EAAAA,EAAAA,YAAU,YHtBL,SAAP,mCGuBIC,CAAgB9B,GACb+B,MAAK,SAAA3B,GACJa,EAAgBb,GAChBe,EAAUf,EAAKc,OAChB,IACAc,OAAM,SAAAZ,GACLa,QAAQb,MAAMA,GACdC,EAASD,EACV,GACJ,GAAE,CAACpB,KAGF,UAACS,EAAD,YACE,SAACE,EAAD,WACE,SAACN,EAAD,CAAUC,GAAImB,EAAQS,QAAtB,uBAEDd,IAAS,oCACTJ,IACC,UAACJ,EAAD,YACE,gBACEuB,IAAG,yCAAoCnB,EAAaoB,aACpDC,IAAI,MAEN,UAACxB,EAAD,YACE,wBAAKG,EAAasB,SAClB,wCAAgBC,KAAKC,MAAkC,GAA5BxB,EAAayB,cAAxC,QACA,uCACA,uBAAIzB,EAAa0B,YACjB,oCACA,uBAjCDxB,EAAOyB,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,eAqC1C,UAAChC,EAAD,YACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMR,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,8BAIN,SAAC,EAAAyC,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,QAIP,C","sources":["api/getMovieDetails.js","components/BackLink/BackLink.jsx","pages/MovieDetail/MovieDetail.styled.js","pages/MovieDetail/MovieDetail.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '654aa329bf365d27f0b15ad93f11ced2';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function getMovieDetails(movieId) {\n  let url = `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n\n  const response = await axios.get(url);\n  const data = await response.data;\n  return data;\n}\n","import { HiArrowLeft } from 'react-icons/hi';\nimport { Link } from 'react-router-dom';\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <Link to={to}>\n      <HiArrowLeft size=\"12\" />\n      {children}\n    </Link>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.main``;\n\nexport const BackLinkBox = styled.div`\n  margin-bottom: 5px;\n`;\n\nexport const MovieCard = styled.div`\n  display: flex;\n`;\n\nexport const MovieInfo = styled.div`\n  margin-left: 20px;\n`;\n\nexport const AdditionalInfo = styled.div``;\n","import { useEffect, useState, Suspense, useRef } from 'react';\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\n\nimport { getMovieDetails } from 'api/getMovieDetails';\nimport { BackLink } from 'components/BackLink/BackLink';\nimport {\n  Container,\n  BackLinkBox,\n  MovieCard,\n  MovieInfo,\n  AdditionalInfo,\n} from 'pages/MovieDetail/MovieDetail.styled';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState({});\n  const [genres, setGenres] = useState([]);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backRef = useRef(location.state?.from ?? '/home');\n\n  const getGenres = () => {\n    return genres.map(genre => genre.name).join(', ');\n  };\n\n  useEffect(() => {\n    getMovieDetails(movieId)\n      .then(data => {\n        setMovieDetails(data);\n        setGenres(data.genres);\n      })\n      .catch(error => {\n        console.error(error);\n        setError(error);\n      });\n  }, [movieId]);\n\n  return (\n    <Container>\n      <BackLinkBox>\n        <BackLink to={backRef.current}>Go back</BackLink>\n      </BackLinkBox>\n      {error && <div>ERROR!</div>}\n      {movieDetails && (\n        <MovieCard>\n          <img\n            src={`https://image.tmdb.org/t/p/w300${movieDetails.poster_path}`}\n            alt=\"\"\n          ></img>\n          <MovieInfo>\n            <h1>{movieDetails.title}</h1>\n            <p>User Score: {Math.floor(movieDetails.vote_average * 10)}%</p>\n            <h2>Ovierview</h2>\n            <p>{movieDetails.overview}</p>\n            <h3>Genres</h3>\n            <p>{getGenres()}</p>\n          </MovieInfo>\n        </MovieCard>\n      )}\n      <AdditionalInfo>\n        <h2>Additional information</h2>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n      </AdditionalInfo>\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","BASE_URL","movieId","url","axios","response","data","BackLink","to","children","size","Container","styled","BackLinkBox","MovieCard","MovieInfo","AdditionalInfo","useState","movieDetails","setMovieDetails","genres","setGenres","error","setError","useParams","location","useLocation","backRef","useRef","state","from","useEffect","getMovieDetails","then","catch","console","current","src","poster_path","alt","title","Math","floor","vote_average","overview","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}